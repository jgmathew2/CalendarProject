{"ast":null,"code":"var _jsxFileName = \"/Users/johanmathew/Documents/Web Design Folder/react-test/src/components/Day/Day.js\",\n  _s = $RefreshSig$();\nimport \"./Day.css\";\nimport Notification from \"./Day\";\nimport Calendar from \"../Calendar/Calendar\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Day(props) {\n  _s();\n  let date = props.date;\n\n  //TODO: Fix this\n\n  if (date == null) date = new Date(date.now());\n  let [dayClass, setDayClass] = useState(getDayClass());\n  let isToday = Math.abs(date.getTime() - Date.now()) < 10 ** 6;\n  function getDayClass() {\n    if (date.getMonth() != Calendar.currMonth) return \"hidden\";else if (isToday === true) return \"today\";\n    return \"current\";\n  }\n  function dateClicked() {\n    console.log(props.date);\n\n    //setDayClass(dayClass + \" \" + \"clicked\"); \n  }\n\n  // boolean to check if certain Date object represents current day\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"date_box\",\n    className: getDayClass(),\n    onClick: dateClicked,\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      notifs: 0,\n      id: \"notification\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"day\",\n      children: date.getDate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this)\n  //Add JSX Code\n  ;\n}\n_s(Day, \"B3IsdMk7ov+Am1Qr3SkhX16mkXU=\");\n_c = Day;\nexport default Day;\nvar _c;\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"names":["Notification","Calendar","useState","jsxDEV","_jsxDEV","Day","props","_s","date","Date","now","dayClass","setDayClass","getDayClass","isToday","Math","abs","getTime","getMonth","currMonth","dateClicked","console","log","id","className","onClick","children","notifs","fileName","_jsxFileName","lineNumber","columnNumber","getDate","_c","$RefreshReg$"],"sources":["/Users/johanmathew/Documents/Web Design Folder/react-test/src/components/Day/Day.js"],"sourcesContent":["import \"./Day.css\"; \nimport Notification from \"./Day\"; \nimport Calendar from \"../Calendar/Calendar\"; \n\nimport {useState} from 'react'; \n\nfunction Day(props) {\n\n    let date = props.date; \n\n\n    //TODO: Fix this\n\n    if(date == null) date = new Date(date.now()); \n\n    let [dayClass, setDayClass] = useState(getDayClass()); \n\n    \n    \n\n    let isToday = (Math.abs(date.getTime() - Date.now()) < 10**6); \n\n    function getDayClass() {\n        if(date.getMonth() != Calendar.currMonth ) return \"hidden\"; \n        else if(isToday===true) return \"today\"; \n        return \"current\"; \n    }\n\n    \n\n    \n    function dateClicked() {\n        \n\n        console.log(props.date); \n\n        //setDayClass(dayClass + \" \" + \"clicked\"); \n       \n    }    \n\n    // boolean to check if certain Date object represents current day\n\n\n    \n\n    return (\n        <div id=\"date_box\" className={getDayClass()} onClick={dateClicked}>\n            <Notification notifs = {0} id=\"notification\"> </Notification>\n            <p id=\"month\"></p>\n            <p id=\"day\">{date.getDate()}</p>\n        </div>\n        //Add JSX Code\n    );\n}\n\n\nexport default Day; \n\n "],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,YAAY,MAAM,OAAO;AAChC,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEhB,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAI;;EAGrB;;EAEA,IAAGA,IAAI,IAAI,IAAI,EAAEA,IAAI,GAAG,IAAIC,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC;EAE5C,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACW,WAAW,CAAC,CAAC,CAAC;EAKrD,IAAIC,OAAO,GAAIC,IAAI,CAACC,GAAG,CAACR,IAAI,CAACS,OAAO,CAAC,CAAC,GAAGR,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAE,CAAE;EAE7D,SAASG,WAAWA,CAAA,EAAG;IACnB,IAAGL,IAAI,CAACU,QAAQ,CAAC,CAAC,IAAIjB,QAAQ,CAACkB,SAAS,EAAG,OAAO,QAAQ,CAAC,KACtD,IAAGL,OAAO,KAAG,IAAI,EAAE,OAAO,OAAO;IACtC,OAAO,SAAS;EACpB;EAKA,SAASM,WAAWA,CAAA,EAAG;IAGnBC,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACE,IAAI,CAAC;;IAEvB;EAEJ;;EAEA;;EAKA,oBACIJ,OAAA;IAAKmB,EAAE,EAAC,UAAU;IAACC,SAAS,EAAEX,WAAW,CAAC,CAAE;IAACY,OAAO,EAAEL,WAAY;IAAAM,QAAA,gBAC9DtB,OAAA,CAACJ,YAAY;MAAC2B,MAAM,EAAI,CAAE;MAACJ,EAAE,EAAC,cAAc;MAAAG,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC7D3B,OAAA;MAAGmB,EAAE,EAAC;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3B,OAAA;MAAGmB,EAAE,EAAC,KAAK;MAAAG,QAAA,EAAElB,IAAI,CAACwB,OAAO,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B;EACL;EAAA;AAER;AAACxB,EAAA,CA/CQF,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}