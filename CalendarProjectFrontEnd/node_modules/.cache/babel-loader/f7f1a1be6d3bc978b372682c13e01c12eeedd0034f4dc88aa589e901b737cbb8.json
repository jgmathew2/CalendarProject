{"ast":null,"code":"var _jsxFileName = \"/Users/johanmathew/Documents/Web Design Folder/react-test/src/components/LeftTaskBar/LeftTaskBar.js\",\n  _s = $RefreshSig$();\nimport TaskDictionary from \"./../../utility/TaskDictionary\";\nimport Task from \"./../TaskComp/TaskComp\";\nimport \"./LeftTaskBar.css\";\nimport AddTaskForm from \"../AddTaskForm/AddTaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeftTaskBar() {\n  _s();\n  // Placeholder, need function to force re-render when tasklist is updated \n  let [placeholder, updateTasks] = useState(0);\n\n  //Sets date based on when date clicked using custom event fired in day.js\n  document.addEventListener(\"updatedTasks\", event => {\n    console.log(\"event fired\");\n    // Inputted 0 irrelevant, just needed to force re-render\n    updateTasks(0);\n  });\n  let taskList = [];\n\n  //Should get you nearest dates in chronological order\n\n  for (let date of TaskDictionary.array) {\n    for (let task of date) {\n      if (taskList.length < 10) taskList.push(task);\n    }\n  }\n  if (taskList == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"taskbar-title\",\n      children: \"TODO:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n  return (\n    /*#__PURE__*/\n    // Task Refers to TaskComp, not utility class. Utility class not directly needed \n    // in this context\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          id: \"taskbar-title\",\n          children: \"TODO:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          id: \"ltb-body\",\n          children: [/*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[5]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[6]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[7]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[8]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            task: taskList[9]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n        trigger: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"ltb-add-button\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(LeftTaskBar, \"dnqpk6DK59ydsrJC6hZ9rDDjI6Q=\");\n_c = LeftTaskBar;\nvar _c;\n$RefreshReg$(_c, \"LeftTaskBar\");","map":{"version":3,"names":["TaskDictionary","Task","AddTaskForm","jsxDEV","_jsxDEV","LeftTaskBar","_s","placeholder","updateTasks","useState","document","addEventListener","event","console","log","taskList","date","array","task","length","push","children","id","fileName","_jsxFileName","lineNumber","columnNumber","trigger","className","_c","$RefreshReg$"],"sources":["/Users/johanmathew/Documents/Web Design Folder/react-test/src/components/LeftTaskBar/LeftTaskBar.js"],"sourcesContent":["import TaskDictionary from \"./../../utility/TaskDictionary\"; \nimport Task from \"./../TaskComp/TaskComp\"; \nimport \"./LeftTaskBar.css\"; \nimport AddTaskForm from \"../AddTaskForm/AddTaskForm\";\n\nexport default function LeftTaskBar() {\n\n\n\n    \n   // Placeholder, need function to force re-render when tasklist is updated \n   let [placeholder, updateTasks] = useState(0);\n\n   //Sets date based on when date clicked using custom event fired in day.js\n   document.addEventListener(\"updatedTasks\", (event) => {\n        console.log(\"event fired\"); \n       // Inputted 0 irrelevant, just needed to force re-render\n       updateTasks(0); \n   }); \n\n    let taskList = []; \n\n    //Should get you nearest dates in chronological order\n\n    \n    for(let date of TaskDictionary.array) {\n        \n        for(let task of date) {\n\n            if(taskList.length < 10) taskList.push(task); \n        }\n    }\n\n    \n    \n    if(taskList == null) return ( \n        <div>\n            <p id=\"taskbar-title\"> \n                TODO:\n            </p>\n        </div>\n   ); \n\n\n    return (\n        // Task Refers to TaskComp, not utility class. Utility class not directly needed \n        // in this context\n\n        <div>\n            <table>\n                <thead id=\"taskbar-title\">\n                     TODO: \n                </thead>\n\n                <tbody id=\"ltb-body\">\n\n                    <Task task = {taskList[0]} ></Task>\n                    <Task task = {taskList[1]} ></Task>\n                    <Task task = {taskList[2]} ></Task>\n                    <Task task = {taskList[3]} ></Task>\n                    <Task task = {taskList[4]} ></Task>\n                    <Task task = {taskList[5]} ></Task>\n                    <Task task = {taskList[6]} ></Task>\n                    <Task task = {taskList[7]} ></Task>\n                    <Task task = {taskList[8]} ></Task>\n                    <Task task = {taskList[9]} ></Task>\n\n                </tbody>\n             \n            </table>\n\n            <AddTaskForm trigger={\n                <button id=\"ltb-add-button\">\n                    <i className=\"fa fa-plus\"></i>\n                </button>\n            }           \n            ></AddTaskForm>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}