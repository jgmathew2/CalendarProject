{"ast":null,"code":"import axios from 'axios';\nimport TaskDictionary from './TaskDictionary';\nexport default class DatabaseConnector {\n  static async addTask(task) {\n    var config = {\n      method: 'post',\n      maxBodyLength: Infinity,\n      url: 'http://localhost:8080/',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: JSON.stringify(task)\n    };\n    await axios(config).then().catch(err => console.log(err));\n  }\n  static async getData(task) {\n    await axios.get(\"http://localhost:8080/\").then(res => {\n      for (let task of res.data) {\n        let date = parseInt(task.date);\n        TaskDictionary.addTask(date, {\n          ...task,\n          date: date\n        });\n      }\n    });\n  }\n\n  //Implement later after u do front end \n  /*\n  static updateTask()\n   */\n}","map":{"version":3,"names":["axios","TaskDictionary","DatabaseConnector","addTask","task","config","method","maxBodyLength","Infinity","url","headers","data","JSON","stringify","then","catch","err","console","log","getData","get","res","date","parseInt"],"sources":["/Users/johanmathew/Documents/Github/CalendarProject/CalendarProjectFrontEnd/src/utility/DatabaseConnector.js"],"sourcesContent":["import axios from 'axios'; \nimport TaskDictionary from './TaskDictionary';\n\nexport default class DatabaseConnector {\n\n    static async addTask(task) {\n\n        var config = {\n            method: 'post',\n            maxBodyLength: Infinity,\n            url: 'http://localhost:8080/',\n            headers: { \n            'Content-Type': 'application/json'\n            },\n            data : JSON.stringify(task)\n        };\n\n        await axios(config).then().catch(err=>console.log(err)); \n    }\n\n    static async getData(task) {\n        await axios.get(\"http://localhost:8080/\")\n            .then((res) => {\n                for(let task of res.data) {\n                    let date = parseInt(task.date); \n                    TaskDictionary.addTask(date, {...task, date:date}); \n                }\n            }); \n    }\n\n    //Implement later after u do front end \n    /*\n    static updateTask()\n\n    */\n\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,eAAe,MAAMC,iBAAiB,CAAC;EAEnC,aAAaC,OAAOA,CAACC,IAAI,EAAE;IAEvB,IAAIC,MAAM,GAAG;MACTC,MAAM,EAAE,MAAM;MACdC,aAAa,EAAEC,QAAQ;MACvBC,GAAG,EAAE,wBAAwB;MAC7BC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACT,IAAI;IAC9B,CAAC;IAED,MAAMJ,KAAK,CAACK,MAAM,CAAC,CAACS,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EAC3D;EAEA,aAAaG,OAAOA,CAACf,IAAI,EAAE;IACvB,MAAMJ,KAAK,CAACoB,GAAG,CAAC,wBAAwB,CAAC,CACpCN,IAAI,CAAEO,GAAG,IAAK;MACX,KAAI,IAAIjB,IAAI,IAAIiB,GAAG,CAACV,IAAI,EAAE;QACtB,IAAIW,IAAI,GAAGC,QAAQ,CAACnB,IAAI,CAACkB,IAAI,CAAC;QAC9BrB,cAAc,CAACE,OAAO,CAACmB,IAAI,EAAE;UAAC,GAAGlB,IAAI;UAAEkB,IAAI,EAACA;QAAI,CAAC,CAAC;MACtD;IACJ,CAAC,CAAC;EACV;;EAEA;EACA;AACJ;AACA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}