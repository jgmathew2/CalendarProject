{"ast":null,"code":"import Task from \"./Task\";\nexport default class TaskDictionary {\n  contructor() {}\n  static addTask(date, Task) {\n    //date refers to hashcoded date, not date object \n\n    if (date == null) date = 0;\n    var dict = TaskDictionary.dict;\n    if (dict[date] == null) {\n      dict[date] = [Task];\n      this.sortArr();\n    } else {\n      dict[date].push(Task);\n    }\n    this.array.push(Task);\n    this.sortArr();\n    this.updateTasks();\n  }\n  static updateTasks() {\n    const addTaskEvent = new CustomEvent(\"updatedTasks\", {\n      detail: {},\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    });\n    // Mechanism to update TaskBars\n\n    document.dispatchEvent(addTaskEvent);\n  }\n  static removeTask(Task) {\n    let date = Task.date;\n    if (date == undefined) date = 0;\n    let taskIndex = this.findIndex(Task, this.dict[date]);\n    let arrayIndex = this.findIndex(Task, this.array);\n    if (taskIndex !== -1) {\n      this.dict[date].splice(taskIndex, 1);\n    }\n    if (arrayIndex !== -1) {\n      this.array.splice(arrayIndex, 1);\n    }\n    this.updateTasks();\n  }\n  static findIndex(object, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (array[i] == object) return i;\n    }\n    return -1;\n  }\n\n  // Sorting mechanism doesn't work for sm reason\n  static sortArr() {\n    this.array.sort((c, d) => {\n      let a = c.date;\n      let b = d.date;\n      while (a % 100 === b % 100) {\n        a /= 100;\n        b /= 100;\n        if (a === 0) break;\n      }\n      return a % 100 - b % 100;\n    });\n  }\n  static getTasks(day) {\n    var dict = TaskDictionary.dict;\n    return dict[day];\n  }\n  static convertDate(date) {\n    //if(date == null) return 0;  \n\n    let value = \"\";\n    value += date.getDate();\n    if (date.getMonth() < 10) value += \"0\" + (date.getMonth() + 1);\n    value += date.getYear() % 100;\n\n    // Returns key to get data from dict \n    return parseInt(value);\n  }\n\n  // Returns date given number input \n  static revertDate(number) {\n    if (number == 0 || number == undefined) return null;\n    let year = number % 100 + 2000;\n    number /= 100;\n    let month = number % 100 - 1;\n    number /= 100;\n    let day = number % 100;\n    let date = new Date(year, month, day);\n    return date;\n  }\n}\n// Key should be date in the form of a int, day/month/year\nTaskDictionary.dict = {};\nTaskDictionary.array = [];","map":{"version":3,"names":["Task","TaskDictionary","contructor","addTask","date","dict","sortArr","push","array","updateTasks","addTaskEvent","CustomEvent","detail","bubbles","cancelable","composed","document","dispatchEvent","removeTask","undefined","taskIndex","findIndex","arrayIndex","splice","object","i","length","sort","c","d","a","b","getTasks","day","convertDate","value","getDate","getMonth","getYear","parseInt","revertDate","number","year","month","Date"],"sources":["/Users/johanmathew/Documents/Github/CalendarProject/CalendarProjectFrontEnd/src/utility/TaskDictionary.js"],"sourcesContent":["import Task from \"./Task\"; \n\nexport default class TaskDictionary {\n\n    // Key should be date in the form of a int, day/month/year\n\n    static dict = {}; \n\n    static array = []; \n\n    contructor() {}\n\n    static addTask(date, Task) {\n\n\n        //date refers to hashcoded date, not date object \n\n        if(date == null) date = 0; \n\n        var dict = TaskDictionary.dict; \n\n        if(dict[date] == null) {\n            dict[date] = [Task]; \n            \n            this.sortArr(); \n        }\n        else {\n            dict[date].push(Task); \n        } \n\n        this.array.push(Task); \n\n        this.sortArr(); \n\n        this.updateTasks(); \n    }\n\n    static updateTasks() {\n        const addTaskEvent = new CustomEvent(\"updatedTasks\", {\n            detail: {},\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n        });\n        // Mechanism to update TaskBars\n\n        document.dispatchEvent(addTaskEvent); \n\n    }\n\n    static removeTask(Task) {\n        let date = Task.date; \n\n        if(date == undefined) date = 0; \n\n        let taskIndex = this.findIndex(Task, this.dict[date]); \n        let arrayIndex = this.findIndex(Task, this.array); \n\n        if(taskIndex !== -1) {\n            this.dict[date].splice(taskIndex, 1); \n        }\n        if(arrayIndex !== -1) {\n            this.array.splice(arrayIndex, 1); \n        }\n\n        this.updateTasks();\n\n    }\n\n    static findIndex(object, array) {\n        for(let i = 0; i < array.length; i++) {\n            if(array[i] == object) return i; \n        }\n\n        return -1; \n    }\n\n    // Sorting mechanism doesn't work for sm reason\n    static sortArr() {\n    \n        this.array.sort((c, d) => {\n\n            let a = c.date; \n            let b = d.date; \n\n            while(a % 100 === b % 100) {\n                a /= 100; \n                b /= 100; \n\n                if(a === 0) break; \n            }\n\n            return a % 100 - b % 100; \n        }); \n    }\n\n    static getTasks(day) {\n        var dict = TaskDictionary.dict; \n        return dict[day]; \n    }\n\n    static convertDate(date) {\n\n\n        //if(date == null) return 0;  \n\n        let value = \"\"; \n\n        value += date.getDate(); \n\n        if(date.getMonth() < 10) value += \"0\" + (date.getMonth() + 1); \n\n        value += date.getYear() % 100; \n\n        // Returns key to get data from dict \n        return parseInt(value); \n\n    }\n\n    // Returns date given number input \n    static revertDate(number) {\n\n        if(number == 0 || number == undefined) return null; \n\n        let year = number % 100 + 2000; \n\n        number /= 100; \n        let month = number % 100 - 1; \n        number /= 100; \n        let day = number % 100; \n\n        let date = new Date(year, month, day); \n\n        return date; \n\n    }\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}